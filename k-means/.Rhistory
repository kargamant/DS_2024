us_states <- replace(us_states, us_states=="RI", "Rhode Island")
library(RColorBrewer)
pallette <- brewer.pal(10, "Spectral")
us_col <- sapply(us_col, function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend(0, 0, legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE)
legend("bottom", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=1)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=1)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0, cex=0.5)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0, cex=0.5)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0, cex=0.8)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, yjust=-0.1, cex=0.8)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, yjust=0.1, cex=0.8)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, yjust=0.1, cex=0.8)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0.5, cex=0.8)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0.5, yjust=0.5, cex=0.8)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0.5, yjust=0.5, cex=0.8)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0.5, yjust=0.5, cex=0.7)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, xjust=0.5, yjust=0.5, cex=0.7)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, inset=-0.1, cex=0.7)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, inset=-0.05, cex=0.7)
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, inset=-0.03, cex=0.7)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, inset=-0.03, cex=0.7)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, cex=0.7)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomleft", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, cex=0.5)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottom", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, horiz=TRUE, cex=0.5)
legend("right", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("right", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
legend("left", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
legend("top", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
legend("top", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5, horiz = TRUE)
legend("topright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("right", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.5)
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
View(income_elec_state)
map('state', regions=us_states, col=unlist(income_elec_state["cluster"]), fill=TRUE, bg="black")
us_col
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
us_col <- lapply(income_elec_state["cluster"], function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
pallette <- brewer.pal(10, "Spectral")
pallette <- brewer.pal(10, "Spectral")
us_col <- sapply(unlist(income_elec_state["cluster"]), function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
# clustering
clusterisation <- kmeans(income_elec_state, 7, nstart=50)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave("plt_k_"+as.character(k)+".png")
k<-7
ggsave("plt_k_"+as.character(k)+".png")
ggsave(cat("plt_k_", as.character(k), ".png"))
ggsave(paste("plt_k_", as.character(k), ".png"))
k<-7
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave(paste("plt_k_", as.character(k), ".png"))
pallette <- brewer.pal(k, "Spectral")
us_col <- sapply(unlist(income_elec_state["cluster"]), function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
k<-10
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=1)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
k<-10
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave(paste("plt_k_", as.character(k), ".png"))
k<-10
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = 100)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
itr_max <- 100
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave(paste("plt_k_", as.character(k), ".png"))
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
itr_max <- 10
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
itr_max <- 20
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave(paste("plt_k_", as.character(k), ".png"))
pallette <- brewer.pal(k, "Spectral")
us_col <- sapply(unlist(income_elec_state["cluster"]), function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
k<-7
itr_max <- 20
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
ggsave(paste("plt_k_", as.character(k), ".png"))
pallette <- brewer.pal(k, "Spectral")
us_col <- sapply(unlist(income_elec_state["cluster"]), function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
# finding optimal k
k_vals <- c(1:30)
# WSS
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(income_elec_state, val, nstart=50)["withinss"])))
df <- data.frame(k=k_vals, wss=wss)
elbow_plt <- ggplot(df, aes(k_vals, wss))
elbow_plt + geom_point() + labs(x="k") + scale_x_continuous(breaks=c(1:30))
# finding optimal k for log scale
k_vals <- c(1:30)
df <- data.frame(log_income=df["log_income"], log_elec=df["log_elec"])
centers_income <- as.data.frame(clusterisation["centers"])["centers.log_income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.log_elec"]
# trying on log scale
income_elec_state["log_income"] <- lapply(income_elec_state["income"], log10)
income_elec_state["log_elec"] <- lapply(income_elec_state["elec"], log10)
df <- data.frame(log_income=income_elec_state["log_income"], log_elec=income_elec_state["log_elec"])
clusterisation <- kmeans(df, k, nstart=50, iter.max = itr_max)
centers_income <- as.data.frame(clusterisation["centers"])["centers.log_income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.log_elec"]
centers_income <- lapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- lapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
df['cluster'] <- as.factor(unlist(clusterisation['cluster']))
df["center_x"] <- centers_income
df["center_y"] <- centers_elec
plt <- ggplot(df, aes(unlist(df["log_income"]), unlist(df["log_elec"]), color = unlist(df["cluster"])))
plt + geom_point() + geom_point(aes(unlist(df["center_x"]), unlist(df["center_y"])), color="black") + labs(title="clusters", x="log_income", y="log_elec", colour="cluster")
ggsave(paste("plt_k_", as.characters(16), "_log.png"))
ggsave(paste("plt_k_", as.character(16), "_log.png"))
# finding optimal k for log scale
k_vals <- c(1:30)
df <- data.frame(log_income=df["log_income"], log_elec=df["log_elec"])
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(df, val, nstart=50)["withinss"])))
df <- data.frame(k=k_vals, wss=wss)
elbow_plt <- ggplot(df, aes(k_vals, wss))
elbow_plt + geom_point() + labs(x="k") + scale_x_continuous(breaks=c(1:30))
# finding optimal k
k_vals <- c(1:30)
# WSS
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(income_elec_state, val, nstart=50)["withinss"])))
df <- data.frame(k=k_vals, wss=wss)
elbow_plt <- ggplot(df, aes(k_vals, wss))
elbow_plt + geom_point() + labs(x="k") + scale_x_continuous(breaks=c(1:30))
ggsave("elbow_plt.png")
# finding optimal k for log scale
k_vals <- c(1:30)
df <- data.frame(log_income=df["log_income"], log_elec=df["log_elec"])
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(df, val, nstart=50)["withinss"])))
# trying on log scale
income_elec_state["log_income"] <- lapply(income_elec_state["income"], log10)
income_elec_state["log_elec"] <- lapply(income_elec_state["elec"], log10)
df <- data.frame(log_income=income_elec_state["log_income"], log_elec=income_elec_state["log_elec"])
clusterisation <- kmeans(df, k, nstart=50, iter.max = itr_max)
centers_income <- as.data.frame(clusterisation["centers"])["centers.log_income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.log_elec"]
centers_income <- lapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- lapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
df['cluster'] <- as.factor(unlist(clusterisation['cluster']))
df["center_x"] <- centers_income
df["center_y"] <- centers_elec
plt <- ggplot(df, aes(unlist(df["log_income"]), unlist(df["log_elec"]), color = unlist(df["cluster"])))
plt + geom_point() + geom_point(aes(unlist(df["center_x"]), unlist(df["center_y"])), color="black") + labs(title="clusters", x="log_income", y="log_elec", colour="cluster")
ggsave(paste("plt_k_", as.character(16), "_log.png"))
# finding optimal k for log scale
k_vals <- c(1:30)
df <- data.frame(log_income=df["log_income"], log_elec=df["log_elec"])
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(df, val, nstart=50)["withinss"])))
df <- data.frame(k=k_vals, wss=wss)
elbow_plt <- ggplot(df, aes(k_vals, wss))
elbow_plt + geom_point() + labs(x="k") + scale_x_continuous(breaks=c(1:30))
ggsave("elbow_plt_log.png")
# finding optimal k for log scale
df <- subset(df, df["log_income"]>4.5 & df["log_elec"]>2.8)
# trying on log scale
income_elec_state["log_income"] <- lapply(income_elec_state["income"], log10)
income_elec_state["log_elec"] <- lapply(income_elec_state["elec"], log10)
df <- data.frame(log_income=income_elec_state["log_income"], log_elec=income_elec_state["log_elec"])
clusterisation <- kmeans(df, k, nstart=50, iter.max = itr_max)
centers_income <- as.data.frame(clusterisation["centers"])["centers.log_income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.log_elec"]
centers_income <- lapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- lapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
df['cluster'] <- as.factor(unlist(clusterisation['cluster']))
df["center_x"] <- centers_income
df["center_y"] <- centers_elec
plt <- ggplot(df, aes(unlist(df["log_income"]), unlist(df["log_elec"]), color = unlist(df["cluster"])))
plt + geom_point() + geom_point(aes(unlist(df["center_x"]), unlist(df["center_y"])), color="black") + labs(title="clusters", x="log_income", y="log_elec", colour="cluster")
ggsave(paste("plt_k_", as.character(16), "_log.png"))
# finding optimal k for log scale
df <- subset(df, df["log_income"]>4.5 & df["log_elec"]>2.8)
# trying on log scale
income_elec_state["log_income"] <- lapply(income_elec_state["income"], log10)
income_elec_state["log_elec"] <- lapply(income_elec_state["elec"], log10)
df <- data.frame(log_income=income_elec_state["log_income"], log_elec=income_elec_state["log_elec"])
clusterisation <- kmeans(df, k, nstart=50, iter.max = itr_max)
centers_income <- as.data.frame(clusterisation["centers"])["centers.log_income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.log_elec"]
centers_income <- lapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- lapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
df['cluster'] <- as.factor(unlist(clusterisation['cluster']))
df["center_x"] <- centers_income
df["center_y"] <- centers_elec
plt <- ggplot(df, aes(unlist(df["log_income"]), unlist(df["log_elec"]), color = unlist(df["cluster"])))
plt + geom_point() + geom_point(aes(unlist(df["center_x"]), unlist(df["center_y"])), color="black") + labs(title="clusters", x="log_income", y="log_elec", colour="cluster")
ggsave(paste("plt_k_", as.character(16), "_log.png"))
View(df)
# finding optimal k for log scale
df <- subset(df, df["log_income"]>4.5 & df["log_elec"]>2.8)
k_vals <- c(1:30)
df <- data.frame(log_income=df["log_income"], log_elec=df["log_elec"])
wss <- sapply(k_vals, function(val) sum(unlist(kmeans(df, val, nstart=50)["withinss"])))
df <- data.frame(k=k_vals, wss=wss)
elbow_plt <- ggplot(df, aes(k_vals, wss))
elbow_plt + geom_point() + labs(x="k") + scale_x_continuous(breaks=c(1:30))
income_elec_state['cluster'] <- NULL
income_elec_state['center_x[,"cluster"]'] <- NULL
income_elec_state['center_x[, "cluster"]'] <- NULL
income_elec_state['center_x[, "cluster"]'] <- NULL
income_elec_state['center_x'] <- NULL
income_elec_state['center_y'] <- NULL
income_elec_state['log_income'] <- NULL
income_elec_state['log_elec'] <- NULL
matr <- dist(income_elec_state)
matr
matr["TN"]
h_clust <- hclust(matr, method="average")
h_clust
View(h_clust)
plot(h_clust)
typeof(h_clust)
h_clust["order"]
h_clust["labels"]
h_clust["order"]
h_clust["heights"]
h_clust["height"]
cutree(h_clust, k=5)
cutree(h_clust, k=1)
cutree(h_clust, k=10)
cutree(h_clust, h=10000)
clusters <- 7
cutree(h_clust, k=clusters)
cut <- cutree(h_clust, k=clusters)
typeof(cut)
cut
income_elec_state["cluster"] <- cut
maps('state')
library(maps)
maps('state')
map('state')
palette <- brewer.pal(10, 'Spectral')
us_cols <- lapply(income_elec_state['cluster'], function(cluster) palette[cluster])
View(us_cols)
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=rownames(income_elec_state))
map('state', col=us_cols, regions=rownames(income_elec_state), fill=TRUE)
map('state', col=us_cols, regions=us_states, fill=TRUE)
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="complete")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="single")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="single")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
plot(h_clust)
h_clust <- hclust(matr, method="centroid")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
k<-7
itr_max <- 20
# clustering
clusterisation <- kmeans(income_elec_state, k, nstart=50, iter.max = itr_max)
# assigning cluster to every state
income_elec_state["cluster"] <- as.factor(unlist(clusterisation["cluster"]))
# pulling up centroids' coordinates
centers_income <- as.data.frame(clusterisation["centers"])["centers.income"]
centers_elec <- as.data.frame(clusterisation["centers"])["centers.elec"]
centers_income <- sapply(clusterisation["cluster"], function(cluster) centers_income[cluster,])
centers_elec <- sapply(clusterisation["cluster"], function(cluster) centers_elec[cluster,])
income_elec_state["center_x"] <- centers_income
income_elec_state["center_y"] <- centers_elec
plt_data <- ggplot(income_elec_state, aes(unlist(income_elec_state["income"]), unlist(income_elec_state["elec"]), color=unlist(income_elec_state["cluster"])))
plt_centroids <- ggplot(income_elec_state, aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])))
plt_data + geom_point() + geom_point(aes(unlist(income_elec_state["center_x"]), unlist(income_elec_state["center_y"])), colour="black") + labs(title="clusters", x="income", y="elec", colour="cluster")
pallette <- brewer.pal(k, "Spectral")
us_col <- sapply(unlist(income_elec_state["cluster"]), function(col) pallette[as.numeric(col)])
map('state', regions=us_states, col=us_col, fill=TRUE, bg="black")
legend("bottomright", legend=sort(unique(unlist(df["cluster"]))), fill=pallette, cex=0.7)
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="average")
income_elec_state['cluster'] <- NULL
income_elec_state['center_x'] <- NULL
income_elec_state['center_y'] <- NULL
income_elec_state['log_income'] <- NULL
income_elec_state['log_elec'] <- NULL
matr <- dist(income_elec_state)
h_clust <- hclust(matr, method="average")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="complete")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="single")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
h_clust <- hclust(matr, method="centroid")
plot(h_clust)
clusters <- 7
cut <- cutree(h_clust, k=clusters)
income_elec_state["cluster"] <- cut
palette <- brewer.pal(10, 'Spectral')
us_cols <- sapply(unlist(income_elec_state['cluster']), function(cluster) palette[cluster])
map('state', col=us_cols, regions=us_states, fill=TRUE, bg='black')
legend("bottomright", legend=sort(unique(unlist(income_elec_state["cluster"]))), fill=pallette, cex=0.7)
