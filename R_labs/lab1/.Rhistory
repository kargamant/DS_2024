names(data)
names(data)[names(data)=="zip_prefixes"]
View(data)
data
data["zipCode"]
data["zip_prefexies"]
data["zip_prefixes"]
data
colnames(data)[colnames(data) == "zip_prefixes"] <- "zipCode"
View(data)
View(data)
data
View(data)
View(data)
colnames(data)[colnames(data) == "meanhouseholdincome"] <- "income"
summary(data)
summary(data["income"])
# Mean is 48245
# Median is 44163
summary(data["income"])["Mean"]
# Mean is 48245
# Median is 44163
summary(data["income"])["Median"]
# Mean is 48245
# Median is 44163
names(summary(data["income"]))
# Mean is 48245
# Median is 44163
write.table(summary(data["income"]), file="analysis.txt", sep="")
plot.default(data["zipCode"], data["income"])
plot(data["zipCode"], data["income"])
plot(data["income"])
plot(c(1, 2, 3, 5))
plot(data["income"])
subset
subs
# subset
subs <- data[data["income"]>7000 & data["income"]<200000]
subs
# subset
subs <- data[data["income"]>7000 and data["income"]<200000]
subs
# subset
subs <- data[data["income"]>7000]
# subset
subs <- data[data["income"]>7000]["income"]
# subset
subs <- data[data["income"]>7000]
subs
# subset
subs <- filter(data, data["income"]>7000)
# subset
filter(data)
# subset
filter(data, income>7000)
# subset
filter(data, data["income"]>7000)
# subset
print(data["income"])
# subset
subs <- filter(data, data["income"]==0)
# subset
subs <- filter(data, data["income"]>7000)
# subset
subs <- filter(data, data["income"]>7000, "convolusional")
# subset
subs <- filter(data, data["income"]>7000, "convolution")
subset
#
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
data
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
data["income"]
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
data["income"][is.na(data["income"])]
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
print(data["income"][is.na(data["income"])])
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
len(data["income"][is.na(data["income"])])
# subset
# subs <- filter(data, data["income"]>7000, "convolution")
data["income"][is.na(data["income"])]
subs
subs <- filter(data, data["income"]>7000, "convolution")
# subset
data[is.na(data)] <- 0
subs <- filter(data, data["income"]>7000, "convolution")
subs <- filter(data, data["income"]>7000)
subs
subs
subs
subs
subs[!is.na(subs)]
subs[is.na(subs)]
plot(subs)
subs <- subset(data, data["income"]>7000 & data["income"]<200000)
View(subs)
plot(subs)
mean(subs["income"])
mean.default(subs["income"])
mean(subs)
mean(as.vector(subs))
new_mean <- mean(subs)
new_mean <- mean(subs)
new_mean <- mean(as.numeric(subs))
new_mean <- mean(as.numeric(subs["income"]))
new_mean <- mean(subs["income"])
summary(subs)
summary(subs["income"])
write.table(summary(subs["income"]), file="analysis.txt", sep="")
# subset
data[is.na(data)] <- 0
plot(subs)
plot(subs)
# plot
plot(data["income"])
data <- read.delim("zipIncome.txt", header=TRUE, sep="|")
# renaming columns
colnames(data)[colnames(data) == "zip_prefixes"] <- "zipCode"
colnames(data)[colnames(data) == "meanhouseholdincome"] <- "income"
write.table(summary(data["income"]), file=to_drop, append=TRUE, sep="")
to_drop <- "analysis.txt"
data <- read.delim("zipIncome.txt", header=TRUE, sep="|")
# renaming columns
colnames(data)[colnames(data) == "zip_prefixes"] <- "zipCode"
colnames(data)[colnames(data) == "meanhouseholdincome"] <- "income"
write.table(summary(data["income"]), file=to_drop, append=TRUE, sep="")
write.table(summary(data["income"]), file=to_drop, sep="")
# plot
plot(data["income"])
# subset
data[is.na(data)] <- 0
subs <- subset(data, data["income"]>7000 & data["income"]<200000)
write.table(summary(subs["income"]), file=to_drop, append=TRUE, sep="")
plot(subs)
plot(subs)
boxplot(subs)
boxplot(subs["zipCode"], subs["income"])
boxplot(subs["income"])
boxplot(subs["income"], horizontal=TRUE)
# subset
data[is.na(data)] <- 0
subs <- subset(data, data["income"]>7000 & data["income"]<200000)
write.table(summary(subs["income"]), file=to_drop, append=TRUE, sep="")
boxplot(subs["income"], horizontal=TRUE)
to_drop <- "analysis.txt"
data <- read.delim("zipIncome.txt", header=TRUE, sep="|")
# renaming columns
colnames(data)[colnames(data) == "zip_prefixes"] <- "zipCode"
colnames(data)[colnames(data) == "meanhouseholdincome"] <- "income"
write.table(summary(data["income"]), file=to_drop, sep="")
# subset
data[is.na(data)] <- 0
subs <- subset(data, data["income"]>7000 & data["income"]<200000)
write.table(summary(subs["income"]), file=to_drop, append=TRUE, sep="")
boxplot(subs["income"], horizontal=TRUE)
boxplot(subs["income"], range=100000, horizontal=TRUE)
boxplot(subs["income"], range=10000, horizontal=TRUE)
boxplot(subs["income"], range=1000, horizontal=TRUE)
boxplot(subs["income"], range=100, horizontal=TRUE)
boxplot(subs["income"], range=10, horizontal=TRUE)
boxplot(subs["income"], range=1, horizontal=TRUE)
boxplot(subs["income"], range=2, horizontal=TRUE)
boxplot(subs["income"], range=3, horizontal=TRUE)
boxplot(subs["income"], range=4, horizontal=TRUE)
boxplot(subs["income"], range=5, horizontal=TRUE)
boxplot(subs["income"], range=6, horizontal=TRUE)
boxplot(subs["income"], range=8, horizontal=TRUE)
boxplot(subs["income"], range=8.5, horizontal=TRUE)
max(subs["income"])
boxplot(subs["income"], range=8.5, horizontal=TRUE)
boxplot(subs["income"], range=1, horizontal=TRUE)
boxplot(subs["income"], range=0, horizontal=TRUE)
boxplot(subs["income"], horizontal=TRUE)
boxplot(subs["income"], range=0, horizontal=TRUE)
quantile(subs["income"], probs=c(0.25, 0.75))
quantile(subs["income"], probs=c(0, 0.25, 0.5, 0.75, 1))
quantile(as.vector(subs["income"]), probs=c(0, 0.25, 0.5, 0.75, 1))
subs["income"][is.na(subs["income"])] <- 0
quantile(as.vector(subs["income"]), probs=c(0, 0.25, 0.5, 0.75, 1))
quantile(subs["income"], probs=c(0, 0.25, 0.5, 0.75, 1))
typeof(subs["income"])
typeof(unlist(subs["income"]))
unlist(subs["income"])
quantile(unlist(subs["income"]), probs=c(0, 0.25, 0.5, 0.75, 1))
boxplot(subs["income"], range=0, names=c("income"), horizontal=TRUE)
boxplot(subs["income"], range=0, names=c("income"), horizontal=TRUE)
boxplot(subs["income"], range=0, names=c("income"))
boxplot(subs["income"], range=0, names=c("income"), horizontal=TRUE)
boxplot(subs["income"], range=0, horizontal=TRUE)
boxplot(subs["income"], range=0, log="x")
boxplot(subs["income"], range=0, log="")
boxplot(subs["income"], range=0, log="y")
boxplot(subs["income"], range=0, log="x", horizontal = TRUE)
title("logarithmic boxplot")
boxplot(subs["income"], range=0, log="x", horizontal = TRUE)
title("logarithmic boxplot")
boxplot(subs["income"], range=0, horizontal=TRUE)
title("boxplot")
boxplot(subs["income"], range=0, log="x", horizontal = TRUE)
title("logarithmic boxplot")
boxplot(subs["income"], range=0, horizontal=TRUE)
title("boxplot", xlab="income")
boxplot(subs["income"], range=0, log="x", horizontal = TRUE)
title("logarithmic boxplot", xlab="income")
ggplot(data)
install.packages("ggplot2")
library(ggplot2)
ggplot(data)
plt <- ggplot(data)
plt + geom_jitter()
plt <- ggplot(data)
plt + geom_jitter(aes(data["zipCode"], data["income"]))
plt <- ggplot(data, aes(data["zipCode"], data["income"]))
plt + geom_jitter()
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"])))
plt + geom_jitter()
plt + geom_jitter()
title("scatter plot", xlab="zipCode", ylab="income")
plt + geom_jitter() + scale_colour_viridis_d()
plt + geom_jitter()
plt +
geom_jitter() +
theme(title="jitter plot", axis.title.x = "zipCode", axis.title.y = "income")
plt + geom_jitter() + xlab("zipCode") + ylab("income")
plt + geom_jitter() + title("jitter plot", xlab="zipCode", ylab="income")
plt + geom_jitter() + title("jitter plot") + xlab("zipCode") + ylab("income")
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income")
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCode")
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income")
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=data["zipCode"]))
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income")
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income")
# plot
plot(data["income"])
# plot
plt <- plot(data["income"])
ggsave("plt.png", plt)
# plot
png("plt.png")
plot(data["income"])
dev.off()
# subset
data[is.na(data)] <- 0
subs <- subset(data, data["income"]>7000 & data["income"]<200000)
write.table(summary(subs["income"]), file=to_drop, append=TRUE, sep="")
quantile(unlist(subs["income"]), probs=c(0, 0.25, 0.5, 0.75, 1))
png("boxplt.png")
boxplot(subs["income"], range=0, horizontal=TRUE)
title("boxplot", xlab="income")
boxplot(subs["income"], range=0, horizontal=TRUE)
title("boxplot", xlab="income")
dev.off()
png("boxplt_log.png")
boxplot(subs["income"], range=0, log="x", horizontal = TRUE)
title("logarithmic boxplot", xlab="income")
dev.off()
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income")
ggsave("jitterplt")
ggsave("jitterplt.png")
plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCodes")
ggsave("jitterplt.png")
plt <- plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCodes")
ggsave("jitterplt.png")
plt + geom_boxplot()
ggsave("jitter_box_plt.png")
quantile(unlist(subs["income"]), probs=c(0, 0.25, 0.5, 0.75, 1))
write.table(summary(data["income"]), file=to_drop, sep="")
write.table(summary(subs["income"]), file=to_drop, append=TRUE, sep="")
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt
plt <- plt + geom_jitter() + ggtitle("jitter plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCodes")
plt
plt <- plt + geom_jitter() + labs(title="jitter_plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCodes")
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt <- plt + geom_jitter() + labs(title="jitter_plot") + xlab("zipCode") + ylab("income") + labs(colour="zipCodes")
plt
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt <- plt + geom_jitter() + labs(title="jitter_plot", x="zipCode", y="income", colour="zipCodes")
plt
ggsave("jitterplt.png")
plt + geom_boxplot()
ggsave("jitter_box_plt.png")
plt <- ggplot(data, aes(unlist(data["zipCode"]), unlist(data["income"]), color=unlist(data["zipCode"])))
plt <- plt + geom_jitter() + labs(title="jitter_plot", x="zipCode", y="income", colour="zipCodes")
plt
ggsave("jitterplt.png")
plt + geom_boxplot()
ggsave("jitter_box_plt.png")
# epicycloid
sin(90)
# epicycloid
sin(pi/2)
# epicycloid
#for(x in 1:360)
x <- 90
rad <- x*pi/180
rad
# epicycloid
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", sep="")
# epicycloid
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", sep=" ")
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", sep=" ")
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(x, y)
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(c(x, y))
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(c(x, y))
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(c(x, y))
print(d)
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(d)
r <- 5
k <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
print(d)
r <- 5
k <- 1
while(d!=360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
d <- d+1
r <- 5
k <- 1
while(d!=360)
rad <- d*pi/180
r <- 5
k <- 1
while(d!=360)
rad <- d*pi/180
while(d!=360)
rad <- d*pi/180
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
print(d)
# epicycloid
r <- 5
k <- 1
d <- 1
for(d in 1:360)
rad <- d*pi/180
# epicycloid
r <- 5
k <- 1
d <- 1
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
print(d)
d <- 1
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
print(d)
for(d in 1:360)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
print(d)
# epicycloid
r <- 5
k <- 1
d <- 1
for(d in 1:360)
angle <- d
for(m in 1:20)
print(m)
# epicycloid
r <- 5
k <- 1
d <- 1
# epicycloid
r <- 5
k <- 1
for(d in 1:360)
angle <- d
# epicycloid
r <- 5
k <- 1
d <- 1
for(m in 1:360)
rad <- d*pi/180
# epicycloid
r <- 5
k <- 1
d <- 1
for(m in 1:36)
rad <- d*pi/180
x <- r*(k+1)*cos(rad) - r*cos((k+1)*rad)
y <- r*(k+1)*sin(rad) - r*sin((k+1)*rad)
write.table(c(x, y), file="epicycloid.txt", append=TRUE, sep="")
d <- d+1
m <- 1
vec <- c(1:10)
vec <- c(1:360)
vec <- c(1:360)
apply(vec, function(x) x^2)
vec <- c(1:360)
apply(vec, 2, function(x) x^2)
apply(vec, 1, function(x) x^2)
apply(vec, 2, function(x) x^2)
vec <- c(1:360)
sapply(vec, function(x) x^2)
vec <- sapply(1:360, function(d) d*pi/180)
print(vec)
angles <- sapply(1:360, function(d) d*pi/180)
# epicycloid
r <- 5
# epicycloid
r <- 5
k <- 1
angles <- sapply(1:360, function(d) d*pi/180)
x_vec <- sapply(angles, function(rad) r*(k+1)*cos(rad) - r*cos((k+1)*rad))
y_vec <- sapply(angles, function(rad) r*(k+1)*sin(rad) - r*sin((k+1)*rad))
epicycloid <- ggplot(c(x_vec, y_vec), aes(x_vec, y_vec))
cycloid_df <- data.frame(x=x_vec, y=y_vec)
View(cycloid_df)
epicycloid <- ggplot(cycloid_df, aes(x_vec, y_vec))
epicycloid
epicycloid + geom_point()
k <- 2
angles <- sapply(1:360, function(d) d*pi/180)
x_vec <- sapply(angles, function(rad) r*(k+1)*cos(rad) - r*cos((k+1)*rad))
y_vec <- sapply(angles, function(rad) r*(k+1)*sin(rad) - r*sin((k+1)*rad))
cycloid_df <- data.frame(x=x_vec, y=y_vec)
epicycloid <- ggplot(cycloid_df, aes(x_vec, y_vec))
epicycloid + geom_point()
k <- 3
angles <- sapply(1:360, function(d) d*pi/180)
x_vec <- sapply(angles, function(rad) r*(k+1)*cos(rad) - r*cos((k+1)*rad))
y_vec <- sapply(angles, function(rad) r*(k+1)*sin(rad) - r*sin((k+1)*rad))
cycloid_df <- data.frame(x=x_vec, y=y_vec)
epicycloid <- ggplot(cycloid_df, aes(x_vec, y_vec))
epicycloid + geom_point()
k <- 4
angles <- sapply(1:360, function(d) d*pi/180)
x_vec <- sapply(angles, function(rad) r*(k+1)*cos(rad) - r*cos((k+1)*rad))
y_vec <- sapply(angles, function(rad) r*(k+1)*sin(rad) - r*sin((k+1)*rad))
cycloid_df <- data.frame(x=x_vec, y=y_vec)
epicycloid <- ggplot(cycloid_df, aes(x_vec, y_vec))
epicycloid + geom_point()
data["zipCode"] <- as.factor(data["zipCode"])
View(data)
data["zipCode"] <- as.factor(data["zipCode"])
as.factor(data["zipCode"])
as.factor(unlist(data["zipCode"]))
data["zipCode"] <- as.factor(unlist(data["zipCode"]))
summary(data)
